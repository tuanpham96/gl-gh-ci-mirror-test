variables:
  GITHUB_MIRROR: https://github.com/tuanpham96/gl-gh-ci-mirror-test
  GITHUB_ACTIONS_URL: https://api.github.com/repos/tuanpham96/gl-gh-ci-mirror-test/actions/runs
  PARENT_PIPELINE_ID: $CI_PIPELINE_ID # see <https://gitlab.com/gitlab-org/gitlab/-/issues/213457#note_1129225239>

stages:
  - Independent Gitlab CI
  - From Github Actions

gl-job-a:
  stage: Independent Gitlab CI
  image: python:3.10.6-slim
  script:
    - python --version
    - echo "hello A"

# gl-job-b:
#   stage: Independent Gitlab CI
#   image: python:3.11-slim
#   script:
#     - python --version
#     - echo "hello B"

get-gh-log:
  stage: From Github Actions
  image: debian:stable-slim
  when: delayed
  start_in: 10 seconds
  before_script:
    - apt-get update -y && apt-get upgrade -y
    - apt-get install curl jq unzip jsonnet -y
  script:
    - |
      echo "Obtaining Github Actions workflow logs"

      mkdir gh-act

      _curl_args=(
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
      )

      curl "${_curl_args[@]}" \
        "$GITHUB_ACTIONS_URL"?head_sha=$CI_COMMIT_SHA \
        -o gh-act/query.json

      curl "${_curl_args[@]}" \
        $(jq --raw-output '.workflow_runs[].jobs_url' gh-act/query.json) \
        -o gh-act/jobs.json

      curl "${_curl_args[@]}" \
        $(jq --raw-output '.workflow_runs[].logs_url' gh-act/query.json) \
        -L --output gh-act/logs.zip

      unset _curl_args

      mkdir -p gh-act/logs

      unzip gh-act/logs.zip -d gh-act/logs

      mkdir -p gh-act/jobs

      find gh-act/logs  -maxdepth 1 -mindepth 1 -type d -print0 | \
        while read -d $'\0' job_logdir
          do
            job_name="$(basename "$job_logdir")"
            job_dir=gh-act/jobs/"$job_name"
            mkdir -p "$job_dir"
            jq -r ".jobs[] | select(.name==\"$job_name\") | .conclusion" gh-act/jobs.json > "$job_dir"/CONCLUSION
            jq -r ".jobs[] | select(.name==\"$job_name\") | .status" gh-act/jobs.json > "$job_dir"/STATUS
        done

      jsonnet -e \
        "local jobs=[$(jq '.jobs[].name' gh-act/jobs.json | tr '\n' ',')];\
         local ci = import 'gitlab-ci.jsonnet'; \
         ci(jobs)" \
        > gh-act/gl-ci-report.yml

      ls gh-act

      cat gh-act/gl-ci-report.yml

  artifacts:
      paths:
        - gh-act/*
      expire_in: 1 hour


trigger-report:
  stage: From Github Actions
  needs:
    - job: get-gh-log
      artifacts: true
  trigger:
    include:
      - artifact: gh-act/gl-ci-report.yml
        job: get-gh-log
    strategy: depend
